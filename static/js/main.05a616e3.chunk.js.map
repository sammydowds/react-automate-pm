{"version":3,"sources":["components/HeaderComponent.js","components/LoadingComponent.js","components/ProjectSearchComponent.js","components/ProjectOffTrackComponent.js","components/ProjectRecentUpdateComponent.js","components/ProjectDetailsComponent.js","components/LeftMenuComponent.js","components/HomeComponent.js","shared/baseUrl.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/projects.js","App.js","redux/configureStore.js","serviceWorker.js","index.js","shared/default.svg"],"names":["Header","props","state","isNavOpen","toggleNav","bind","this","setState","Navbar","className","fixed","expand","NavbarBrand","src","height","width","alt","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavbarText","Button","outline","Component","Loading","Spinner","style","color","ProjectSearch","active_phases","active_phases_lst","map","phase","phase_end","moment","end","Badge","name","fromNow","projects","projects_rend","project","on_schedule","status","phases","filter","active","phases_rend","renderPhases","fontweight","class","viewBox","fill","xmlns","fill-rule","d","handleProjectClicked","href","clip-rule","projectsLoading","Row","Col","Card","CardBody","CardTitle","lead","CardSubtitle","CardText","renderProj","ProjectOff","fontSize","offtrack_projects","length","ProjectRecent","recent_projects","lastupdated","subtract","UpdateProjectForm","isModalOpen","toggleModal","handleSubmit","values","updateProject","id","description","company","complete","Fragment","Modal","toggle","ModalHeader","ModalBody","onSubmit","RenderPhase","phase_start","start","scope","month","day","format","diff","ProjectDetails","console","log","proj_phases","size","handleCloseDetails","Table","hover","LeftMenu","ListGroup","vertical","flush","ListGroupItem","tag","action","numProjects","HomeComponent","projectFromDashboard","projectClicked","projectSelected","Container","fluid","lg","isLoading","baseUrl","type","projectsFailed","errmess","payload","addProjects","Main","fetchProjects","path","component","withRouter","connect","dispatch","fetch","then","response","ok","error","Error","statusText","message","json","catch","newProject","Date","toISOString","method","body","JSON","stringify","headers","credentials","alert","Projects","errMess","store","createStore","combineReducers","applyMiddleware","thunk","logger","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"oTAgDeA,G,wDAnCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAM,CACTC,WAAW,GAEb,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBALA,E,wDASjBC,KAAKC,SAAS,CACZJ,WAAYG,KAAKJ,MAAMC,c,+BAKzB,OACE,6BACE,kBAACK,EAAA,EAAD,CAAQC,UAAU,eAAeC,MAAM,MAAMC,OAAO,MAClD,kBAACC,EAAA,EAAD,CAAaH,UAAU,gBACrB,yBAAKI,IAAI,4BAA4BC,OAAO,KAAKC,MAAM,KAAKC,IAAI,KADlE,cAIA,kBAACC,EAAA,EAAD,CAAeC,QAASZ,KAAKF,YAC3B,kBAACe,EAAA,EAAD,CAAUC,OAAQd,KAAKJ,MAAMC,UAAWkB,QAAM,GAC5C,kBAACC,EAAA,EAAD,CAAKb,UAAU,UAAUY,QAAM,IAE/B,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,SAAO,GAAf,kB,GA5BKC,c,2GCTRC,EAAU,WACrB,OACE,yBAAKlB,UAAU,uCACb,kBAACmB,EAAA,EAAD,CAASC,MAAO,CAAEd,MAAO,OAAQD,OAAQ,QAAUgB,MAAM,cCyGhDC,E,kDA/Fb,WAAY9B,GAAQ,uCACZA,G,yDAGK+B,GACX,IAAMC,EAAoBD,EAAcE,KAAI,SAACC,GAC3C,IAAMC,EAAYC,IAAOF,EAAMG,KAC/B,OACE,0BAAM7B,UAAU,QACd,kBAAC8B,EAAA,EAAD,CAAOT,MAAM,QACVK,EAAMK,KADT,IACgBJ,EAAUK,eAKhC,OACE,8BAAOR,K,iCAIAS,GAAW,IAAD,OACbC,EAAgBD,EAASR,KAAI,SAACU,GAClC,IAAMC,EAAcD,EAAQE,OACtBd,EAAgBY,EAAQG,OAAOC,QAAO,SAACb,GAAD,OAAWA,EAAMc,UACvDC,EAAc,EAAKC,aAAanB,GACtC,OACE,8BACE,uBAAGH,MAAO,CAACuB,WAAY,cACrB,0BAAM3C,UAAU,QACZ,yBAAK4C,MAAM,iBAAiBtC,MAAM,MAAMD,OAAO,MAAMwC,QAAQ,YAAYC,KAAK,eAAeC,MAAM,8BACjG,0BAAMC,YAAU,UAAUC,EAAE,uYAFlC,OAKI,uBAAGjD,UAAU,eAAeS,QAAS,WAAO,EAAKjB,MAAM0D,qBAAqBf,KACzEA,EAAQJ,MANf,OASE,uBAAGoB,KAAK,IAAInD,UAAU,2BACpB,yBAAK4C,MAAM,kBAAkBtC,MAAM,MAAMD,OAAO,MAAMwC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,8BAC1F,0BAAMC,YAAU,UAAUC,EAAE,+IAA+IG,YAAU,YACrL,0BAAMJ,YAAU,UAAUC,EAAE,yKAAyKG,YAAU,cAGjNhB,EACE,0BAAMpC,UAAU,iBAEhB,8BACE,kBAAC8B,EAAA,EAAD,CAAO9B,UAAU,kBAAjB,eAIR,uBAAGA,UAAU,iBAAb,OAEGyC,QAMX,OACE,8BACGP,K,+BAML,OAAIrC,KAAKL,MAAM6D,gBAEX,kBAAC,EAAD,MAIA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMxD,UAAU,gCACd,kBAACyD,EAAA,EAAD,CAAUzD,UAAU,aAClB,kBAAC0D,EAAA,EAAD,CAAW1D,UAAU,QACnB,wBAAI2D,MAAI,GAAR,kBAIF,kBAACC,EAAA,EAAD,CAAc5D,UAAU,QACtB,8BAEF,kBAAC6D,EAAA,EAAD,CAAU7D,UAAU,8BAA8BH,KAAKiE,WAAWjE,KAAKL,MAAMyC,mB,GAtFjEhB,aC6Db8C,E,kDA7Db,WAAYvE,GAAQ,uCACZA,G,uDAGGyC,GAAW,IAAD,OACbC,EAAgBD,EAASR,KAAI,SAACU,GACdA,EAAQE,OAC5B,OACE,8BACE,uBAAGjB,MAAO,CAACuB,WAAY,YAAaqB,SAAU,SAC5C,8BACE,yBAAKpB,MAAM,kBAAkBtC,MAAM,MAAMD,OAAO,MAAMwC,QAAQ,YAAYC,KAAK,UAAUC,MAAM,8BAC7F,0BAAMC,YAAU,UAAUC,EAAE,mEAC5B,0BAAMD,YAAU,UAAUC,EAAE,+dAHhC,OAME,uBAAGjD,UAAU,eAAeS,QAAS,WAAO,EAAKjB,MAAM0D,qBAAqBf,KACzEA,EAAQJ,YAOrB,OACE,8BACGG,K,+BAML,GAAIrC,KAAKL,MAAM6D,gBACb,OACE,kBAAC,EAAD,MAGF,IAAMY,EAAoBpE,KAAKL,MAAMyC,SAASM,QAAO,SAACJ,GAAD,OAA+B,GAAlBA,EAAQE,UAC1E,OACE,kBAACiB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMxD,UAAU,oBACd,kBAACyD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAW1D,UAAU,oBACnB,wBAAI2D,MAAI,GAAR,sBACqB,kBAAC7B,EAAA,EAAD,CAAO9B,UAAU,aAAaiE,EAAkBC,UAGvE,kBAACN,EAAA,EAAD,KACE,8BAEF,kBAACC,EAAA,EAAD,CAAU7D,UAAU,mCAAmCH,KAAKiE,WAAWG,Y,GApD9DhD,aC+DVkD,E,kDA7Db,WAAY3E,GAAQ,uCACZA,G,uDAGGyC,GAAW,IAAD,OACbC,EAAgBD,EAASR,KAAI,SAACU,GACdA,EAAQE,OAC5B,OACE,8BACE,uBAAGjB,MAAO,CAACuB,WAAY,YAAaqB,SAAU,SAC5C,8BACE,yBAAKpB,MAAM,kBAAkBtC,MAAM,MAAMD,OAAO,MAAMwC,QAAQ,YAAYC,KAAK,UAAUC,MAAM,8BAC7F,0BAAMC,YAAU,UAAUC,EAAE,mEAC5B,0BAAMD,YAAU,UAAUC,EAAE,+dAHhC,OAME,uBAAGjD,UAAU,eAAeS,QAAS,WAAO,EAAKjB,MAAM0D,qBAAqBf,KACzEA,EAAQJ,YAOrB,OACE,8BACGG,K,+BAML,GAAIrC,KAAKL,MAAM6D,gBACb,OACE,kBAAC,EAAD,MAGF,IAAMe,EAAkBvE,KAAKL,MAAMyC,SAASM,QAAO,SAACJ,GAAD,OAAaP,IAAOO,EAAQkC,YAAa,cAAgBzC,MAAS0C,SAAS,EAAG,WACjI,OACE,kBAAChB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMxD,UAAU,oBACd,kBAACyD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAW1D,UAAU,oBACnB,wBAAI2D,MAAI,GAAR,oBACmB,kBAAC7B,EAAA,EAAD,CAAO9B,UAAU,aAAaoE,EAAgBF,UAGnE,kBAACN,EAAA,EAAD,KACE,8BAEF,kBAACC,EAAA,EAAD,CAAU7D,UAAU,mCAAmCH,KAAKiE,WAAWM,Y,GApD3DnD,a,4CCKtBsD,E,kDAEJ,WAAY/E,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACT+E,aAAa,GAEjB,EAAKC,YAAc,EAAKA,YAAY7E,KAAjB,gBACnB,EAAK8E,aAAe,EAAKA,aAAa9E,KAAlB,gBANL,E,0DAUfC,KAAKC,SAAS,CACd0E,aAAc3E,KAAKJ,MAAM+E,gB,mCAIhBG,GACT9E,KAAK4E,cACL5E,KAAKL,MAAMoF,cAAc/E,KAAKL,MAAM2C,QAAQ0C,GAAIF,EAAO5C,KAAM4C,EAAOG,YAAaH,EAAOrC,OAAQqC,EAAOI,QAASJ,EAAOK,SAAUL,EAAOtC,U,+BAGlI,IAAD,OAEL,OACA,kBAAC,IAAM4C,SAAP,KACI,kBAACC,EAAA,EAAD,CAAOvE,OAAQd,KAAKJ,MAAM+E,YAAaW,OAAQtF,KAAK4E,aACpD,kBAACW,EAAA,EAAD,CAAaD,OAAQtF,KAAK4E,aAA1B,UAA+C5E,KAAKL,MAAM2C,QAAQJ,MAClE,kBAACsD,EAAA,EAAD,KACI,kBAAC,YAAD,CAAWC,SAAU,SAACX,GAAD,OAAY,EAAKD,aAAaC,QAIvD,kBAAC5D,EAAA,EAAD,CAAQC,SAAO,EAAChB,UAAU,YAAYS,QAASZ,KAAK4E,aAApD,e,GAjCsBxD,aAyChC,SAASsE,EAAT,GAA+B,IAAT7D,EAAQ,EAARA,MACdC,EAAYC,IAAOF,EAAMG,IAAK,cAC9B2D,EAAc5D,IAAOF,EAAM+D,MAAO,cACxC,OACE,kBAAC,IAAMR,SAAP,KACE,4BACE,wBAAIS,MAAM,OACNhE,EAAMc,OACJ,0BAAMxC,UAAU,iCAAhB,IAAiD,kBAAC8B,EAAA,EAAD,CAAOT,MAAM,WAAb,UACjD,+BAGN,4BAAKK,EAAMK,MACX,4BAAKyD,EAAYG,QAAjB,IAA2BH,EAAYI,MAAvC,KAAgDJ,EAAYK,OAAO,OAAnE,KACA,4BAAKlE,EAAUgE,QAAf,IAAyBhE,EAAUiE,MAAnC,KAA4CjE,EAAUkE,OAAO,OAA7D,KACA,4BAAKlE,EAAUK,WACf,4BAAKL,EAAUmE,KAAKN,EAAa,WAOzC,IAkEeO,EAlEQ,SAACvG,GACtB,GAAIA,EAAM6D,gBACR,OACE,kBAAC,EAAD,MAGF2C,QAAQC,IAAI,SACZD,QAAQC,IAAIzG,GACZ,IAAM0G,EAAc1G,EAAM2C,QAAQG,OAAOb,KAAI,SAACC,GAC5C,OACE,kBAAC6D,EAAD,CAAa7D,MAAOA,OAIxB,OACE,6BACE,kBAAC8B,EAAA,EAAD,CAAMxD,UAAU,oBACd,kBAACyD,EAAA,EAAD,CAAUzD,UAAU,aAClB,kBAAC0D,EAAA,EAAD,CAAW1D,UAAU,QACnB,wBAAI2D,MAAI,GACPnE,EAAM2C,QAAQJ,KADf,OAGEvC,EAAM2C,QAAQE,OACZ,0BAAMrC,UAAU,iBAEhB,8BACE,kBAAC8B,EAAA,EAAD,CAAO9B,UAAU,kBAAjB,cAPN,OAWA,kBAACe,EAAA,EAAD,CAAQoF,KAAK,KAAKnG,UAAU,YAAYgB,SAAO,EAACK,MAAM,OAAOZ,QAAS,WAAKjB,EAAM4G,uBAAjF,kBAEA,8BAEF,kBAACxC,EAAA,EAAD,CAAc5D,UAAU,yBAAxB,kBAGA,kBAAC6D,EAAA,EAAD,CAAU7D,UAAU,aAClB,kBAACqG,EAAA,EAAD,CAAOF,KAAK,KAAKnG,UAAU,cAAcsG,OAAK,GAC5C,+BACE,4BACE,sCACA,qCACA,qCACA,mCACA,4CACA,iDAGJ,+BACGJ,KAIP,yBAAKlG,UAAU,cACb,kBAAC,EAAD,CAAmBmC,QAAS3C,EAAM2C,QAASyC,cAAepF,EAAMoF,qB,kBC3G/D2B,EAxBE,SAAC/G,GACd,OACI,kBAACgE,EAAA,EAAD,CAAMxD,UAAU,qCACZ,kBAACwG,EAAA,EAAD,CAAWC,UAAQ,EAACzG,UAAU,oBAAoB0G,OAAK,GACnD,kBAACC,EAAA,EAAD,CAAe3G,UAAU,cAAc4G,IAAI,SAASC,QAAM,GACtD,6BACI,yBAAKjE,MAAM,oBAAoBtC,MAAM,MAAMD,OAAO,MAAMwC,QAAQ,YAAYC,KAAK,eAAeC,MAAM,8BACtG,0BAAMC,YAAU,UAAUC,EAAE,6EAA6EG,YAAU,YACnH,0BAAMJ,YAAU,UAAUC,EAAE,+DAA+DG,YAAU,YACrG,0BAAMJ,YAAU,UAAUC,EAAE,gEAAgEG,YAAU,aAJ1G,qBAUJ,kBAACuD,EAAA,EAAD,CAAeC,IAAI,SAAS5G,UAAU,cAAc6G,QAAM,GAA1D,gBAAwE,kBAAC/E,EAAA,EAAD,SAAStC,EAAMsH,YAAf,MACxE,kBAACH,EAAA,EAAD,CAAeC,IAAI,SAAS5G,UAAU,cAAc6G,QAAM,GAA1D,SACA,kBAACF,EAAA,EAAD,CAAeC,IAAI,SAAS5G,UAAU,cAAc6G,QAAM,GAA1D,iBCyCDE,E,kDAlDf,WAAYvH,GAAQ,IAAD,8BACjB,cAAMA,IAON0D,qBAAuB,SAAA8D,GACrB,EAAKlH,SAAS,CAACmH,gBAAgB,EAAMC,gBAAiBF,KATvC,EAYjBZ,mBAAqB,WACnB,EAAKtG,SAAS,CAACmH,gBAAgB,EAAOC,gBAAiB,QAXzD,EAAKzH,MAAQ,CACXwH,gBAAgB,EAChBC,gBAAiB,MAJF,E,qDAmBf,OACE,kBAACC,EAAA,EAAD,CAAWnH,UAAU,oBAAoBoH,OAAO,GAC9C,kBAAC9D,EAAA,EAAD,CAAKtD,UAAU,gCAEb,kBAACuD,EAAA,EAAD,CAAK8D,GAAG,KACN,kBAAC,EAAD,CAAUP,YAAajH,KAAKL,MAAMyC,SAASA,SAASiC,SACpD,kBAAC,EAAD,CAAYjC,SAAUpC,KAAKL,MAAMyC,SAASA,SAAUoB,gBAAiBxD,KAAKL,MAAMyC,SAASqF,UAAWpE,qBAAsBrD,KAAKqD,uBAC/H,kBAAC,EAAD,CAAejB,SAAUpC,KAAKL,MAAMyC,SAASA,SAAUoB,gBAAiBxD,KAAKL,MAAMyC,SAASqF,UAAWpE,qBAAsBrD,KAAKqD,wBAGpI,kBAACK,EAAA,EAAD,CAAK8D,GAAG,KACN,kBAAC,EAAD,CAAepF,SAAUpC,KAAKL,MAAMyC,SAASA,SAAUoB,gBAAiBxD,KAAKL,MAAMyC,SAASqF,UAAWpE,qBAAsBrD,KAAKqD,wBAGpI,kBAACK,EAAA,EAAD,CAAK8D,GAAG,KACLxH,KAAKJ,MAAMwH,eACR,kBAAC,EAAD,CAAgB9E,QAAStC,KAAKJ,MAAMyH,gBAAiBd,mBAAoBvG,KAAKuG,mBAAoBxB,cAAe/E,KAAKL,MAAMoF,gBAC5H,qC,GAtCY3D,a,gBCdfsG,EAAU,yBC0EVlE,EAAkB,iBAAO,CACpCmE,KC1E8B,qBD6EnBC,EAAiB,SAACC,GAAD,MAAc,CAC1CF,KC7E6B,kBD8E7BG,QAASD,IAGEE,EAAc,SAAC3F,GAAD,MAAe,CACxCuF,KCpF0B,eDqF1BG,QAAS1F,IElEL4F,G,kDAEJ,WAAYrI,GAAQ,uCACZA,G,gEAINwG,QAAQC,IAAI,0BACZpG,KAAKL,MAAMsI,kB,+BAGF,IAAD,OAQN,OACE,yBAAK9H,UAAU,kBACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO+H,KAAK,QAAQC,UAVT,WACf,OACE,kBAAC,EAAD,CAAM/F,SAAU,EAAKzC,MAAMyC,SAAUoB,gBAAiB,EAAK7D,MAAMyC,SAASqF,UAAW1C,cAAe,EAAKpF,MAAMoF,yB,GAftG3D,aA+BJgH,eAAWC,mBA1CF,SAAAzI,GACtB,MAAO,CACLwC,SAAUxC,EAAMwC,aAIO,SAACkG,GAAD,MAAe,CACxCL,cAAe,WAAOK,GFXW,SAACA,GAGhC,OAFAA,EAAS9E,GAAgB,IAElB+E,MAAMb,EAAU,YACpBc,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASjG,OAAS,KAAOiG,EAASI,YAEnE,MADAF,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEE,MADa,IAAIC,MAAMD,EAAMG,YAG9BN,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAApG,GAAQ,OAAGkG,EAASP,EAAY3F,OACrC4G,OAAM,SAAAL,GAAK,OAAIL,EAASV,EAAee,EAAMG,iBERlD/D,cAAe,SAACC,EAAI9C,EAAM+C,EAAaxC,EAAQyC,EAASC,EAAU3C,GAAY8F,EFanD,SAACtD,EAAI9C,EAAM+C,EAAaxC,EAAQyC,EAASC,EAAU3C,GAAnD,OAA8D,SAAC8F,GAC1F,IAAMW,EAAa,CAEjBjE,GAAIA,EACJ9C,KAAMA,EACN+C,YAAaA,EACbxC,OAAQA,EACRyC,QAASA,EACTC,SAAUA,EACV3C,OAAQA,GAGV,OADAyG,EAAWzE,aAAc,IAAI0E,MAAOC,cAC7BZ,MAAMb,EAAU,WAAY,CACjC0B,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,oBAElBC,YAAa,gBAEZjB,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASjG,OAAS,KAAOiG,EAASI,YAEnE,MADAF,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEE,MADa,IAAIC,MAAMD,EAAMG,YAG9BN,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAE1BP,MAAK,SAAAC,GAAQ,OAAIH,EAASP,EAAYU,OACtCO,OAAM,SAAAL,GACLxC,QAAQC,IAAI,kBAAmBuC,EAAMG,SACrCY,MAAM,4CAA8Cf,EAAMG,aEpDyB/D,CAAcC,EAAI9C,EAAM+C,EAAaxC,EAAQyC,EAASC,EAAU3C,QAkC/H6F,CAA6CL,K,2BChD1D2B,GAAW,WAIP,IAJQ/J,EAIT,uDAJiB,CAC7B6H,WAAW,EACXmC,QAAS,KACTxH,SAAU,IACT4E,EAAW,uCACd,OAAOA,EAAOW,MACZ,IFRwB,eEStB,OAAO,6BAAI/H,GAAX,IAAkB6H,WAAW,EAAOmC,QAAS,KAAMxH,SAAU4E,EAAOc,UAEtE,IFV4B,mBEW1B,OAAO,6BAAIlI,GAAX,IAAkB6H,WAAW,EAAMmC,QAAS,KAAMxH,SAAU,KAE9D,IFZ2B,kBEazB,OAAO,6BAAIxC,GAAX,IAAkB6H,WAAW,EAAOmC,QAAS5C,EAAOc,QAAS1F,SAAU,KAEzE,QACE,OAAOxC,I,6BCXPiK,GCDUC,uBACZC,2BAAgB,CACd3H,SAAUuH,KAEZK,2BAAgBC,KAAOC,ODYZC,G,uKAVX,OACE,kBAAC,WAAD,CAAUN,MAAOA,IACjB,kBAAC,KAAD,KACE,kBAAC,GAAD,Y,GANUzI,aEGEgJ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxC,MAAK,SAAAyC,GACJA,EAAaC,gBAEdlC,OAAM,SAAAL,GACLxC,QAAQwC,MAAMA,EAAMG,a,uHEzI5BqC,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.05a616e3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavbarText,\n  Button\n} from 'reactstrap';\nimport logo from '../shared/default.svg'; \n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      isNavOpen: false\n    };\n    this.toggleNav = this.toggleNav.bind(this);\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  }\n\n  render() {\n    return(\n      <div>\n        <Navbar className=\"navbar-style\" fixed=\"top\" expand=\"lg\">\n          <NavbarBrand className=\"navbar-style\">\n            <img src=\"assets/images/profile.png\" height=\"55\" width=\"55\" alt=\"\"/>\n            Projectile\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggleNav} />\n            <Collapse isOpen={this.state.isNavOpen} navbar>\n              <Nav className=\"mr-auto\" navbar>\n              </Nav>\n              <NavbarText>\n                <Button outline>Log In</Button>\n              </NavbarText>\n            </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\nexport default Header;\n","import React from 'react';\nimport { Spinner } from 'reactstrap'; \n\nexport const Loading = () => {\n  return (\n    <div className=\"mt-5 h-100 text-center align-middle\">\n      <Spinner style={{ width: '3rem', height: '3rem' }} color=\"#000839\" />\n    </div>\n  );\n};\n","import React, { Component, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment'; \nimport {  \n  Col, \n  Badge, \n  Card,\n  CardBody, \n  CardSubtitle, \n  CardTitle, \n  CardText, \n  Row\n } from 'reactstrap';\nimport { Loading } from './LoadingComponent'; \n\nclass ProjectSearch extends Component {\n  constructor(props) {\n    super(props); \n  }\n\n  renderPhases(active_phases) {\n    const active_phases_lst = active_phases.map((phase) => {\n      const phase_end = moment(phase.end); \n      return(\n        <span className=\"px-1\">\n          <Badge color=\"dark\">\n            {phase.name} {phase_end.fromNow()}\n          </Badge>\n        </span>\n      ); \n    }); \n    return(\n      <span>{active_phases_lst}</span>\n    ); \n  }\n\n  renderProj(projects) {\n    const projects_rend = projects.map((project) => {\n      const on_schedule = project.status; \n      const active_phases = project.phases.filter((phase) => phase.active);\n      const phases_rend = this.renderPhases(active_phases); \n      return(\n        <span>\n          <p style={{fontweight: 'superbold'}}>\n            <span className=\"pr-2\">\n                <svg class=\"bi bi-box-seam\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path fill-rule=\"evenodd\" d=\"M8.186 1.113a.5.5 0 0 0-.372 0L1.846 3.5l2.404.961L10.404 2l-2.218-.887zm3.564 1.426L5.596 5 8 5.961 14.154 3.5l-2.404-.961zm3.25 1.7l-6.5 2.6v7.922l6.5-2.6V4.24zM7.5 14.762V6.838L1 4.239v7.923l6.5 2.6zM7.443.184a1.5 1.5 0 0 1 1.114 0l7.129 2.852A.5.5 0 0 1 16 3.5v8.662a1 1 0 0 1-.629.928l-7.185 2.874a.5.5 0 0 1-.372 0L.63 13.09a1 1 0 0 1-.63-.928V3.5a.5.5 0 0 1 .314-.464L7.443.184z\"/>\n                </svg>\n                &nbsp; \n                <a className=\"project-link\" onClick={() => {this.props.handleProjectClicked(project);}}>\n                  {project.name}\n                </a>\n              &nbsp; \n              <a href='#' className=\"project-link text-right\">\n                <svg class=\"bi bi-clipboard\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"grey\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path fill-rule=\"evenodd\" d=\"M4 1.5H3a2 2 0 00-2 2V14a2 2 0 002 2h10a2 2 0 002-2V3.5a2 2 0 00-2-2h-1v1h1a1 1 0 011 1V14a1 1 0 01-1 1H3a1 1 0 01-1-1V3.5a1 1 0 011-1h1v-1z\" clip-rule=\"evenodd\"/>\n                  <path fill-rule=\"evenodd\" d=\"M9.5 1h-3a.5.5 0 00-.5.5v1a.5.5 0 00.5.5h3a.5.5 0 00.5-.5v-1a.5.5 0 00-.5-.5zm-3-1A1.5 1.5 0 005 1.5v1A1.5 1.5 0 006.5 4h3A1.5 1.5 0 0011 2.5v-1A1.5 1.5 0 009.5 0h-3z\" clip-rule=\"evenodd\"/>\n                </svg>\n              </a>\n              { on_schedule\n                ? <span className=\"align-middle\">\n                  </span>\n                : <span>\n                    <Badge className=\"off-badge ml-1\">Off Track</Badge>\n                  </span>\n              }\n            </span>\n            <p className=\"badge-subtext\">\n              WIP: \n              {phases_rend} \n            </p>\n          </p>  \n        </span>  \n      ); \n    }); \n    return (\n      <span>\n        {projects_rend}\n      </span>\n    ); \n  }\n\n  render () {\n    if (this.props.projectsLoading) {\n      return(\n        <Loading />\n      );\n    } else {\n      return(\n        <Row>\n          <Col>\n            <Card className=\"mt-3 text-center card-border\">\n              <CardBody className=\"text-left\">\n                <CardTitle className=\"pl-2\">\n                  <h4 lead>\n                    Open Projects\n                  </h4>\n                </CardTitle>\n                <CardSubtitle className=\"pl-2\">\n                  <hr></hr>\n                </CardSubtitle>\n                <CardText className=\"pt-2 pl-4 font-weight-bold\">{this.renderProj(this.props.projects)}</CardText>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      );\n    }\n  }\n}\n\nexport default ProjectSearch; \n\n","import React, { Component, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {  \n  Col, \n  Badge, \n  Card,\n  CardBody, \n  CardSubtitle, \n  CardTitle, \n  CardText, \n  Row\n } from 'reactstrap';\nimport { Loading } from './LoadingComponent'; \n\nclass ProjectOff extends Component {\n  constructor(props) {\n    super(props); \n  }\n\n  renderProj(projects) {\n    const projects_rend = projects.map((project) => {\n      const on_schedule = project.status; \n      return(\n        <span>\n          <p style={{fontweight: 'superbold', fontSize: \"12px\"}}>\n            <span>\n              <svg class=\"bi bi-flag-fill\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"#ffa41b\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path fill-rule=\"evenodd\" d=\"M3.5 1a.5.5 0 0 1 .5.5v13a.5.5 0 0 1-1 0v-13a.5.5 0 0 1 .5-.5z\"/>\n                <path fill-rule=\"evenodd\" d=\"M3.762 2.558C4.735 1.909 5.348 1.5 6.5 1.5c.653 0 1.139.325 1.495.562l.032.022c.391.26.646.416.973.416.168 0 .356-.042.587-.126a8.89 8.89 0 0 0 .593-.25c.058-.027.117-.053.18-.08.57-.255 1.278-.544 2.14-.544a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-.5.5c-.638 0-1.18.21-1.734.457l-.159.07c-.22.1-.453.205-.678.287A2.719 2.719 0 0 1 9 9.5c-.653 0-1.139-.325-1.495-.562l-.032-.022c-.391-.26-.646-.416-.973-.416-.833 0-1.218.246-2.223.916A.5.5 0 0 1 3.5 9V3a.5.5 0 0 1 .223-.416l.04-.026z\"/>\n              </svg> \n              &nbsp; \n              <a className=\"project-link\" onClick={() => {this.props.handleProjectClicked(project);}}>\n                {project.name}\n              </a>\n            </span>\n          </p>  \n        </span>  \n      ); \n    }); \n    return (\n      <span>\n        {projects_rend}\n      </span>\n    ); \n  }\n\n  render () {\n    if (this.props.projectsLoading) {\n      return(\n        <Loading />\n      );\n    } else {\n      const offtrack_projects = this.props.projects.filter((project) => project.status == false); \n      return(\n        <Row>\n          <Col>\n            <Card className=\"mt-3 card-border\">\n              <CardBody>\n                <CardTitle className=\"pl-2 normal-text\">\n                  <h6 lead>\n                    Off Track Projects <Badge className=\"off-badge\">{offtrack_projects.length}</Badge>\n                  </h6>\n                </CardTitle>\n                <CardSubtitle>\n                  <hr></hr>\n                </CardSubtitle>\n                <CardText className=\"font-weight-bold text-left pl-2\">{this.renderProj(offtrack_projects)}</CardText>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      );\n    }\n  }\n}\n\nexport default ProjectOff; \n\n","import React, { Component, useState } from 'react';\nimport moment from 'moment'; \nimport { Link } from 'react-router-dom';\nimport {  \n  Col, \n  Badge, \n  Card,\n  CardBody, \n  CardSubtitle, \n  CardTitle, \n  CardText, \n  Row\n } from 'reactstrap';\nimport { Loading } from './LoadingComponent'; \n\nclass ProjectRecent extends Component {\n  constructor(props) {\n    super(props); \n  }\n\n  renderProj(projects) {\n    const projects_rend = projects.map((project) => {\n      const on_schedule = project.status; \n      return(\n        <span>\n          <p style={{fontweight: 'superbold', fontSize: \"12px\"}}>\n            <span>\n              <svg class=\"bi bi-flag-fill\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"#000839\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path fill-rule=\"evenodd\" d=\"M3.5 1a.5.5 0 0 1 .5.5v13a.5.5 0 0 1-1 0v-13a.5.5 0 0 1 .5-.5z\"/>\n                <path fill-rule=\"evenodd\" d=\"M3.762 2.558C4.735 1.909 5.348 1.5 6.5 1.5c.653 0 1.139.325 1.495.562l.032.022c.391.26.646.416.973.416.168 0 .356-.042.587-.126a8.89 8.89 0 0 0 .593-.25c.058-.027.117-.053.18-.08.57-.255 1.278-.544 2.14-.544a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-.5.5c-.638 0-1.18.21-1.734.457l-.159.07c-.22.1-.453.205-.678.287A2.719 2.719 0 0 1 9 9.5c-.653 0-1.139-.325-1.495-.562l-.032-.022c-.391-.26-.646-.416-.973-.416-.833 0-1.218.246-2.223.916A.5.5 0 0 1 3.5 9V3a.5.5 0 0 1 .223-.416l.04-.026z\"/>\n              </svg> \n              &nbsp; \n              <a className=\"project-link\" onClick={() => {this.props.handleProjectClicked(project);}}>\n                {project.name}\n              </a>\n            </span>\n          </p>  \n        </span>  \n      ); \n    }); \n    return (\n      <span>\n        {projects_rend}\n      </span>\n    ); \n  }\n\n  render () {\n    if (this.props.projectsLoading) {\n      return(\n        <Loading />\n      );\n    } else {\n      const recent_projects = this.props.projects.filter((project) => moment(project.lastupdated, \"YYYY-MM-DD\") > moment().subtract(7, \"days\")); \n      return(\n        <Row>\n          <Col>\n            <Card className=\"mt-3 card-border\">\n              <CardBody>\n                <CardTitle className=\"pl-2 normal-text\">\n                  <h6 lead>\n                    Recently Updated <Badge className=\"off-badge\">{recent_projects.length}</Badge>\n                  </h6>\n                </CardTitle>\n                <CardSubtitle>\n                  <hr></hr>\n                </CardSubtitle>\n                <CardText className=\"font-weight-bold text-left pl-2\">{this.renderProj(recent_projects)}</CardText>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      );\n    }\n  }\n}\n\nexport default ProjectRecent; \n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment'; \nimport {  \n  Badge, \n  Card,\n  CardBody, \n  CardSubtitle, \n  CardTitle, \n  CardText, \n  Button,\n  Table, \n  Modal, \n  ModalHeader, \n  ModalBody\n } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent'; \n\n\nclass UpdateProjectForm extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n          isModalOpen: false\n      };\n      this.toggleModal = this.toggleModal.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggleModal() {\n      this.setState({\n      isModalOpen: !this.state.isModalOpen\n      });\n  }\n\n  handleSubmit(values) {\n      this.toggleModal();\n      this.props.updateProject(this.props.project.id, values.name, values.description, values.phases, values.company, values.complete, values.status);\n  }\n\n  render() {\n\n      return (\n      <React.Fragment>\n          <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Update {this.props.project.name}</ModalHeader>\n          <ModalBody>\n              <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n              </LocalForm>\n          </ModalBody>\n          </Modal>\n          <Button outline className=\"secondary\" onClick={this.toggleModal}>\n            Update\n          </Button>\n      </React.Fragment>\n      );\n  }\n}\n\nfunction RenderPhase({phase}) {\n  const phase_end = moment(phase.end, \"YYYY-MM-DD\");\n  const phase_start = moment(phase.start, \"YYYY-MM-DD\")\n  return(\n    <React.Fragment>\n      <tr>\n        <th scope=\"row\">\n          { phase.active\n            ? <span className=\"text-danger font-weight-light\"> <Badge color=\"warning\"> WIP </Badge></span>\n            : <div></div>\n          } \n        </th>\n        <td>{phase.name}</td>\n        <td>{phase_start.month()}/{phase_start.day()} ({phase_start.format(\"ddd\")})</td>\n        <td>{phase_end.month()}/{phase_end.day()} ({phase_end.format(\"ddd\")})</td>\n        <td>{phase_end.fromNow()}</td>\n        <td>{phase_end.diff(phase_start, \"days\")}</td>\n      </tr>\n    </React.Fragment>\n    \n  ); \n}\n\nconst ProjectDetails = (props) => {\n  if (props.projectsLoading) {\n    return(\n      <Loading />\n    );\n  } else {\n    console.log('PROPS');\n    console.log(props); \n    const proj_phases = props.project.phases.map((phase)=> {\n      return(\n        <RenderPhase phase={phase}/>\n      ); \n    });\n\n    return(\n      <div>\n        <Card className=\"my-3 card-border\">\n          <CardBody className=\"text-left\">\n            <CardTitle className=\"pl-2\">\n              <h3 lead>\n              {props.project.name}\n              &nbsp;\n              { props.project.status\n                ? <span className=\"align-middle\">\n                  </span>\n                : <span>\n                    <Badge className=\"off-badge ml-1\">Off Track</Badge>\n                  </span>\n              }\n              &nbsp; \n              <Button size=\"sm\" className=\"align-end\" outline color=\"dark\" onClick={()=>{props.handleCloseDetails();}}>Close Details</Button>\n             </h3>\n              <hr></hr>\n            </CardTitle>\n            <CardSubtitle className=\"mb-2 lead text-center\">\n              Project Phases\n            </CardSubtitle>\n            <CardText className=\"pl-3 pb-3\">\n              <Table size=\"sm\" className=\"text-center\" hover>\n                <thead>\n                  <tr>\n                    <th>Status</th>\n                    <th>Phase</th>\n                    <th>Start</th>\n                    <th>End</th>\n                    <th>Relative End</th>\n                    <th>Duration (Days)</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {proj_phases}\n                </tbody>\n              </Table>\n            </CardText>\n            <div className=\"text-right\">\n              <UpdateProjectForm project={props.project} updateProject={props.updateProject} />\n            </div>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n\n}\n\n\nexport default ProjectDetails; \n","import React from 'react'; \nimport {\n    Card, \n    ListGroup, \n    ListGroupItem, \n    Badge\n} from 'reactstrap'; \n\nconst LeftMenu = (props) => {\n    return(\n        <Card className=\"mt-3 font-weight-bold card-border\">\n            <ListGroup vertical className=\"text-center w-100\" flush>\n                <ListGroupItem className=\"text-center\" tag=\"button\" action>\n                    <div>\n                        <svg class=\"bi bi-plus-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fill-rule=\"evenodd\" d=\"M8 3.5a.5.5 0 01.5.5v4a.5.5 0 01-.5.5H4a.5.5 0 010-1h3.5V4a.5.5 0 01.5-.5z\" clip-rule=\"evenodd\"/>\n                        <path fill-rule=\"evenodd\" d=\"M7.5 8a.5.5 0 01.5-.5h4a.5.5 0 010 1H8.5V12a.5.5 0 01-1 0V8z\" clip-rule=\"evenodd\"/>\n                        <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 108 1a7 7 0 000 14zm0 1A8 8 0 108 0a8 8 0 000 16z\" clip-rule=\"evenodd\"/>\n                        </svg>\n                        &nbsp; \n                        Add Project\n                    </div>\n                </ListGroupItem>\n                <ListGroupItem tag=\"button\" className=\"text-center\" action>All Projects <Badge> {props.numProjects} </Badge></ListGroupItem>\n                <ListGroupItem tag=\"button\" className=\"text-center\" action>Learn</ListGroupItem>\n                <ListGroupItem tag=\"button\" className=\"text-center\" action>My Profile</ListGroupItem>\n            </ListGroup>\n        </Card>\n\n    ); \n}\n\nexport default LeftMenu; \n","import React, { Component } from 'react';\nimport { \n  Container, \n  Row, \n  Col\n } from 'reactstrap';\nimport ProjectSearch from './ProjectSearchComponent'; \nimport ProjectOff from './ProjectOffTrackComponent'; \nimport ProjectRecent from './ProjectRecentUpdateComponent'; \nimport ProjectDetails from './ProjectDetailsComponent'; \nimport LeftMenu from './LeftMenuComponent'; \n\n\n\nclass HomeComponent extends Component {\n\nconstructor(props) {\n  super(props);\n  this.state = {\n    projectClicked: false,\n    projectSelected: null,\n    }\n  }\n\n  handleProjectClicked = projectFromDashboard => {\n    this.setState({projectClicked: true, projectSelected: projectFromDashboard}); \n  }\n\n  handleCloseDetails = () => {\n    this.setState({projectClicked: false, projectSelected: null}); \n  }\n\n\nrender () {\n\n    return(\n      <Container className=\"container-spacing\" fluid={true}>\n        <Row className=\"h-100 justify-content-center\">\n\n          <Col lg=\"2\">\n            <LeftMenu numProjects={this.props.projects.projects.length} />\n            <ProjectOff projects={this.props.projects.projects} projectsLoading={this.props.projects.isLoading} handleProjectClicked={this.handleProjectClicked} />\n            <ProjectRecent projects={this.props.projects.projects} projectsLoading={this.props.projects.isLoading} handleProjectClicked={this.handleProjectClicked} />\n          </Col>\n\n          <Col lg=\"4\">\n            <ProjectSearch projects={this.props.projects.projects} projectsLoading={this.props.projects.isLoading} handleProjectClicked={this.handleProjectClicked} />\n          </Col>\n\n          <Col lg=\"6\">\n            {this.state.projectClicked\n              ? <ProjectDetails project={this.state.projectSelected} handleCloseDetails={this.handleCloseDetails} updateProject={this.props.updateProject}></ProjectDetails>\n              : <div></div>\n            }\n          </Col>\n\n        </Row>\n\n\n      </Container>\n      \n    );\n  }\n\n}\n\nexport default HomeComponent; \n","export const baseUrl = 'http://localhost:3001/'; ","import * as ActionTypes from './ActionTypes'; \nimport { baseUrl } from '../shared/baseUrl';\n\n// THUNK\nexport const fetchProjects = () => (dispatch) => {\n    dispatch(projectsLoading(true));\n  \n    return fetch(baseUrl + 'projects')\n      .then(response => {\n        if (response.ok) {\n          return response;\n        }\n        else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess= new Error(error.message);\n        throw errmess;\n      })\n      .then(response => response.json())\n      .then(projects=> dispatch(addProjects(projects)))\n      .catch(error => dispatch(projectsFailed(error.message)));\n  \n  }\n\n// THUNK\nexport const updateProject = (id, name, description, phases, company, complete, status) => (dispatch) => {\n  const newProject = {\n    // TODO: Put form data here and as vars \n    id: id,\n    name: name, \n    description: description, \n    phases: phases, \n    company: company, \n    complete: complete, \n    status: status, \n  }\n  newProject.lastupdated = new Date().toISOString();\n  return fetch(baseUrl + 'projects', {\n    method: 'POST',\n    body: JSON.stringify(newProject),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'same-origin'\n  })\n    .then(response => {\n      if (response.ok) {\n        return response;\n      }\n      else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n      var errmess= new Error(error.message);\n      throw errmess;\n    })\n    .then(response => response.json())\n    // Updating the redux store\n    .then(response => dispatch(addProjects(response)))\n    .catch(error => {\n      console.log('Update project ', error.message);\n      alert('Your updates could not be posted\\nError: ' + error.message);\n    });\n\n}\n\n// More Actions\nexport const projectsLoading = () => ({\n  type: ActionTypes.PROJECTS_LOADING\n});\n\nexport const projectsFailed = (errmess) => ({\n  type: ActionTypes.PROJECTS_FAILED,\n  payload: errmess\n});\n\nexport const addProjects = (projects) => ({\n  type: ActionTypes.ADD_PROJECTS,\n  payload: projects\n});","export const ADD_PROJECTS = \"ADD_PROJECTS\"; \nexport const PROJECTS_LOADING = \"PROJECTS_LOADING\"; \nexport const PROJECTS_FAILED = \"PROJECTS_FAILED\"; ","import React, { Component } from 'react';\nimport Header from './HeaderComponent';\nimport Home from './HomeComponent';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchProjects } from '../redux/ActionCreators';\nimport { updateProject } from '../redux/ActionCreators'; \n\nconst mapStateToProps = state => {\n  return {\n    projects: state.projects\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchProjects: () => {dispatch(fetchProjects())}, \n  updateProject: (id, name, description, phases, company, complete, status) => {dispatch(updateProject(id, name, description, phases, company, complete, status))}\n});\n\nclass Main extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    console.log('Main component mounted'); \n    this.props.fetchProjects();\n  }\n\n  render () {\n\n      const HomePage = () => {\n        return(\n          <Home projects={this.props.projects} projectsLoading={this.props.projects.isLoading} updateProject={this.props.updateProject}/>\n        ); \n      }\n\n      return(\n        <div className=\"main-container\">\n          <Header />\n          <Switch>\n            <Route path=\"/home\" component={HomePage} />\n          </Switch>\n        </div>\n      );\n    }\n\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main)); \n","import * as ActionTypes from './ActionTypes';\n\nexport const Projects = (state = {\n    isLoading: true,\n    errMess: null,\n    projects: []\n  }, action) => {\n  switch(action.type) {\n    case ActionTypes.ADD_PROJECTS:\n      return {...state, isLoading: false, errMess: null, projects: action.payload};\n\n    case ActionTypes.PROJECTS_LOADING:\n      return {...state, isLoading: true, errMess: null, projects: []};\n\n    case ActionTypes.PROJECTS_FAILED:\n      return {...state, isLoading: false, errMess: action.payload, projects: []};\n\n    default:\n      return state;\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render () {\n    return (\n      <Provider store={store}>\n      <BrowserRouter>\n        <Main />\n      </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Projects } from './projects';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nexport const ConfigureStore = () => {\n  const store = createStore(\n    combineReducers({\n      projects: Projects,\n    }),\n    applyMiddleware(thunk, logger)\n  );\n  return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/default.e142c50f.svg\";"],"sourceRoot":""}